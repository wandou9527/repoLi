input {
  file {
    path => "D:/work/huimin/git_site_huimin/pay-manager-service/logs/*.log"
    start_position => "beginning" # 第一次丛头开始读取文件 beginning or end
    type => payservicelog #相当于一个变量 可以在下面用到
    exclude => "*.gz"       #不想监听的文件规则，基于glob匹配语法
    stat_interval => "3"    #定时检查文件是否更新，默认1s
  }
  file {
    path => "D:/aaaa/self/es/self_temp/log/liming-test.log"
    start_position => "beginning"
    type => limingtest
    exclude => "*.gz"
    stat_interval => "3"
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://wandour.top:3306/wandou1"
    jdbc_user => "root"
    jdbc_password => "uAiqwVwjJ8-i"
    jdbc_driver_library => "C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_paging_enabled => "true"
    jdbc_page_size => "100"
    statement_filepath => "D:\aaaa\self\es\logstash-7.3.2\config\jdbc.sql"
    schedule => "* * * * *"
    jdbc_default_timezone => "Asia/Shanghai"
    type => "jdbc"
    # true 使用其它字段追踪，而不是用时间
    use_column_value => false
    #追踪的字段
    tracking_column => update_time
    record_last_run => true
    #上一个sql_last_value值的存放文件路径, 必须要在文件中指定字段的初始值
    last_run_metadata_path => "D:\aaaa\self\es\logstash-7.3.2\config\station_parameter.txt"
  }
}

filter {
  if [type] == "limingtest" {
    grok {
      add_field => {
        "new_field" => "new_static_value wandou---"
      }
      # 55.3.244.1 GET /index.html 15824 0.043
      match => { "message" => "%{IP:client} %{WORD:method} %{URIPATHPARAM:request} %{NUMBER:bytes} %{NUMBER:duration}" }
    }
    # D:\aaaa\self\es\self_temp\logstash
    # grok {
    #       patterns_dir => "D:/aaaa/self/es/self_temp/logstash"
    #       #定义多个模式,其中一个不匹配,可以走另一个
    #       match => {"message" => ["%{GROKLOG}","%{MYSELF:message}"]}
    #       #将完整的日志message替换成  MYSELF匹配的message
    #       overwrite => ["message"]
    #   }
  } else if [type] == "payservicelog" {
    grok {
      add_field => {
        "new_field" => "new_static_value wandou--- payservicelog"
      }
      match => {
        # "message" => "%{WORD:my_filed}" 好使，只匹配了第一个单词
        # "message" => "%{TOMCAT_DATESTAMP_NO_TIMEZONE:tomcat_datestamp}" # 好使，得到value：{tomcat_datestamp: 2020-07-17 15:34:45,662}。但类型是text
        # "message" => "(?<date>\d{4}-\d+-\d+\s\d+\D\d+\D\d+)" # 能得到 value '2020-07-16 19:50:32' 但入es索引时date格式报错，date字段在es为date类型，此格式不识别
        # "message" => "(?<date>\d{4}-\d+-\d+)"
        "message" => "(?<date_time_v2>\d{4}-\d+-\d+\s\d+\D\d+\D\d+)"
      }
    }
  }
}

output {
  if [type] == "payservicelog" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logstash_pay_v2"
      # index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
      #user => "elastic"
      #password => "changeme"
    }
  } else if [type] == "limingtest" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logstash_liming"
    }
    stdout {
    }
  } else if [type] == "jdbc" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "jdbc"
      document_id => "%{id}"
    }
  } else {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logstash_demo"
    }
  }
}
